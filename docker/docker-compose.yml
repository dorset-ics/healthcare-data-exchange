version: '3.8'

services:
  api:
    image: api
    container_name: api
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_URLS=http://+:80
      - AzureStorageConnectionString=${AZURE_STORAGE_CONNECTION_STRING}
      - Pds__Mesh__MailboxPassword=${MESH_PASSWORD}
      - DataHubFhirServer__TemplateImage=${DataHubFhirServer__TemplateImage:-acrdexoss.azurecr.io/dev:$TAG}
      - Pds__Mesh__RetrieveSchedule=${Pds__Mesh__RetrieveSchedule:-*/10 * * * * ?}
    ports:
      - "${API_PORT}:80"
    volumes:
      - ~/work/_temp:/app/keys
    depends_on:
      mesh-sandbox:
        condition: service_healthy
      fhir-api:
        condition: service_healthy
    extra_hosts: # Required for docker on Linux to resolve host.docker.internal
      - "host.docker.internal:host-gateway"

  fhir-api:
    image: "mcr.microsoft.com/healthcareapis/r4-fhir-server"
    restart: on-failure
    environment:
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
      FHIRServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:fhir-sql,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD};MultipleActiveResultSets=False;Connection Timeout=30;TrustServerCertificate=true;"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__Initialize: "true"
      SqlServer__SchemaOptions__AutomaticUpdatesEnabled: "true"
      DataStore: "SqlServer"
      FhirServer__Operations__ConvertData__Enabled: "true"
      FhirServer__Operations__ConvertData__ContainerRegistryServers__0: "acrdexoss.azurecr.io"
      DOTNET_EnableWriteXorExecute: 0
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "--show-error", "--connect-timeout", "5", "http://localhost:8080/metadata" ]
      interval: 10s
      timeout: 10s
      retries: 6
    depends_on:
      fhir-sql:
        condition: service_healthy

  fhir-sql:
    image: "mcr.microsoft.com/mssql/server"
    user: root
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'" ]
      interval: 10s
      timeout: 10s
      retries: 6
    ports:
      - "1433:1433"
    volumes:
      - ./mounted-data/fhir-sql:/var/opt/mssql/data

  azure-storage-emulator:
    image: "mcr.microsoft.com/azure-storage/azurite"
    ports:
      - "10000:10000"
      - "10002:10002"
    volumes:
      - ./mounted-data/azure-storage:/data
    command:
      - "azurite"
      - "--oauth"
      - "basic"
      - "--blobHost"
      - "0.0.0.0"
      - "--tableHost"
      - "0.0.0.0"

  mesh-sandbox:
    build:
      context: https://github.com/NHSDigital/mesh-sandbox.git#refs/tags/v1.0.4
    container_name: mesh-sandbox
    ports:
      - "8700:80"
    healthcheck:
      test: curl -sf http://localhost:80/health || exit 1
      interval: 3s
      timeout: 10s
      retries: 3
    environment:
      - SHARED_KEY=TestKey

  templates-pusher:
    image: templates-pusher
    container_name: templates-pusher
    environment:
      TAG: ${TAG:-''}
    build:
      context: ../templates
      dockerfile: ./Dockerfile
      args:
        ACR_NAME: ${ACR_NAME:-'acrdexoss.azurecr.io'}
        AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
        AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
        AZURE_TENANT_ID: ${AZURE_TENANT_ID}
    profiles:
      - manual

  data-init:
    image: data-init
    container_name: data-init
    build:
      context: ../scripts
      dockerfile: ./Dockerfile
    environment:
      FHIR_SERVER_URL: ${FHIR_SERVER_URL:-http://fhir-api:8080}
      FHIR_SERVER_AUTH_TOKEN: ${FHIR_SERVER_AUTH_TOKEN:-''}
      PACKAGE_ID: ${PACKAGE_ID}
      PACKAGE_VERSION: ${PACKAGE_VERSION}
    depends_on:
      fhir-api:
        condition: service_healthy
    profiles:
      - manual
