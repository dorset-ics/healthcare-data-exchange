steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        az login --service-principal -u $CLIENT_ID -p $CLIENT_SECRET --tenant $TENANT_ID
        bash $(Build.SourcesDirectory)/.pipelines/scripts/add-agent-ip-for-keyvault.sh ${{parameters.env}}
    displayName: 'Add Agent IP to KeyVault'
    env:
      TENANT_ID: $(AZURE_TENANT_ID)
      CLIENT_ID: $(sp-dex-deployment-client-id)
      CLIENT_SECRET: $(sp-dex-deployment-client-secret)

  - script: |
      echo "env                                 = \"${{parameters.env}}\"" > ${{parameters.env}}.tfvars      
      echo "location                            = \"$(location)\"" >> ${{parameters.env}}.tfvars
      echo "log_analytics_sku                   = \"$(log_analytics_sku)\"" >> ${{parameters.env}}.tfvars
      echo "app_plan_sku                        = \"$(app_plan_sku)\"" >> ${{parameters.env}}.tfvars
      echo "vnet_address_space                  = [\"$(vnet_address_space)\"]" >> ${{parameters.env}}.tfvars
      echo "app_gateway_subnet_address_prefixes = [\"$(app_gateway_subnet_address_prefixes)\"]" >> ${{parameters.env}}.tfvars
      echo "services_subnet_address_prefixes    = [\"$(services_subnet_address_prefixes)\"]" >> ${{parameters.env}}.tfvars
      echo "app_plan_subnet_address_prefixes    = [\"$(app_plan_subnet_address_prefixes)\"]" >> ${{parameters.env}}.tfvars
      echo "apim_subnet_address_prefixes        = [\"$(apim_subnet_address_prefixes)\"]" >> ${{parameters.env}}.tfvars
      echo "image_tag_suffix                    = \"$(Build.BuildId)\"" >> ${{parameters.env}}.tfvars
      echo "app_registration_owners             = [\"$(app_registration_owners)\"]" >> ${{parameters.env}}.tfvars
      echo "azure_cli_client_id                 = \"$(azure_cli_client_id)\"" >> ${{parameters.env}}.tfvars
      echo "sp_client_id                        = \"$(sp-dex-deployment-client-id)\"" >> ${{parameters.env}}.tfvars

      cp ${{parameters.env}}.tfvars ./infrastructure/${{parameters.env}}.tfvars
      cp ${{parameters.env}}.tfvars ./infrastructure/${{parameters.env}}.tfvars
      cat ./infrastructure/${{parameters.env}}.tfvars
    displayName: Prepare tfvars file

  - task: Bash@3
    displayName: 'Apply Infra on Azure'
    name: deployEnv
    inputs:
      targetType: 'inline'
      failOnStandardError: true
      script: |
        set -eux  # fail on error and log commands
        
        terraform  -chdir=infrastructure init -backend=true -backend-config="resource_group_name=$(RG_DEX_GENERAL)" -backend-config="storage_account_name=$(tf_status_storage_account)" -backend-config="container_name=terraform" -backend-config="key=${{parameters.env}}-terraform.tfstate"
        terraform  -chdir=infrastructure apply -auto-approve -var-file=${{parameters.env}}.tfvars  
        
        echo "##vso[task.setvariable variable=frontend_address;isOutput=true]$(terraform  -chdir=infrastructure output gateway_frontend_address)"
    env:
      ARM_TENANT_ID: $(AZURE_TENANT_ID)
      ARM_CLIENT_ID: $(sp-dex-deployment-client-id)
      ARM_CLIENT_SECRET: $(sp-dex-deployment-client-secret)
      ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)